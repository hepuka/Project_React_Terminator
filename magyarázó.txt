Terminator komponens:
-Ez a komponens tartalmaz 1 db terminátor elemet, ami tartalmaz egy képet, egy nevet és egy serial számot.
- A kép a https://robohash.org oldalról jön.
- A komponens props-ként megkapja a Terminátorlistázó komponenstől, mint szülő komponenstől az id-t amit ide helyezünk be https://robohash.org/${id}?size=180x180 hogy különböző képeket kapjunk, a nevet és a serialszámot.

TerminátorListázó komponens:
- importálva megkapja a Terminator komponenst
- props-ként az App-tól, mint szülő komponenstől megkap egy terminatorListProps tömböt, amibe objekumonként benne vannak az egyes terminátorok. Ezeket az objektumokat fogja egyenként kilistázni a Terminátor komponensel.
- ezt a tömböt bejárjuk egy map-el és visszaadunk egy Terminator komponenst aminek props-nak beállítjuk a key, id, name, serialNumber propokat.


SearchBox komponens:
- props-ként az App-tól, mint szülőtől megkap az eseménykezelőt (onSearchChange) függvényt ami egy string-et ad át. Ez a string lesz az ami begépelünk a keresőmezőbe
- onChange={searchBoxProps} - itt rendeljük hozzá az App komponens eseménykezelőjét a komponenhez
- mivel a Reactben csak egyirányú adatfolyam van, így az információk felülről kell, hogy jöjjön. Azonos szintű komponensek nem tudnak egymással kommunikálni. Az App komponensen keresztül fognak kommunikálni a komponensek a state-en keresztül. A state-ben tároljuk a komponens állapotát, ha ez az állapot megváltozik akkor erre fognak reagálni a gyerek komponensek. 
- A TerminatorList komponens props-ként kapja meg az App state-jétől az információkat
-onSearchChange függvénnyel mondja meg az App komponens a React-nek, hogy ha megváltozik a kereső tartalma, akkor mit jelenítsen meg.

App.js
- mint szülő elem a SearchBox és TerminatorList komponenseknek props-ként adja át az eseménykezelőt a SearchBox-nak és egy szűrt tömböt a TerminatorList-nek.